Babycat C API Documentation
===========================

.. admonition:: Documentation is unfinished
   :class: note

   This documentation page for the Babycat C API is currently unfinished.


Background
----------

Babycat's C bindings are automatically generated by `cbindgen <https://github.com/eqrion/cbindgen>`_. To avoid creating circular dependencies, cbindgen simply describes the entire Babycat API as a single header file named ``babycat.h``. This makes Babycat's C API annoying to read, but easy to generate and compile.

If you are just getting started with Babycat, you might find it easier to use the :doc:`Babycat Python API </api/python/index>` or the :doc:`Babycat WebAssembly API </api/wasm/index>`.

Building the Babycat C bindings
-------------------------------

If you want to compile and link a software project against Babycat's C bindings, follow these steps:

First clone the Babycat Git repository.

.. code:: bash

   git clone git@github.com:babycat-io/babycat.git
   cd babycat

You can build the ``babycat.h`` header file with this Makefile command. The header file should appear in your current directory.

.. code:: bash

   make babycat.h

You can build the corresponding C object file with this command:

.. code:: bash

   make cargo-build-release-frontend-c

Typedefs
--------
.. autodoxygenfile:: babycat.h
   :sections: detaileddescription typedef

Structs
-------
.. autodoxygenfile:: babycat.h
   :sections: detaileddescription innerclass public-attrib

Functions
---------

.. autodoxygenfile:: babycat.h
   :sections: detaileddescription func

``#define``-ed constants
------------------------

These constants represent default values for structs as well as error codes that can be returned.


.. autodoxygenfile:: babycat.h
   :sections: detaileddescription define
