name: test

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
  pull_request:
  push:
    tags-ignore:
      - 'v*' # Don't run these tests twice when cutting a new version.

env:
  CARGO_TERM_COLOR: always
  MACOSX_DEPLOYMENT_TARGET: 10.7

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]

    steps:
    - uses: actions/checkout@v2

    - name: Install ALSA development headers (only on Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install --yes --no-install-recommends libasound2-dev
      if: matrix.os == 'ubuntu-20.04'

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: "1.53.0"
          override: true
          components: rustfmt, clippy
          target: wasm32-unknown-unknown

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.6"

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "14"

    - name: Revendor Rust code
      run: |
        rm -rfv Cargo.lock vendor
        mkdir -p vendor/symphonia-0.3.0
        cargo vendor --versioned-dirs

    - name: Check code formatting (only on Ubuntu)
      if: matrix.os == 'ubuntu-20.04'
      run: make fmt-check

    - name: Lint code (only on Ubuntu)
      if: matrix.os == 'ubuntu-20.04'
      run: make lint

    - name: Build babycat command line program
      run: make build-binary

    - name: Run Rust tests
      run: make test-rust

    - name: Run Python tests
      run: make test-python

    - name: Run WebAssembly tests with NodeJS (only on Ubuntu)
      run: make test-wasm-nodejs
      if: matrix.os == 'ubuntu-20.04'

    - name: Run C tests (only on Ubuntu and macOS for now)
      run: make test-c
      if: matrix.os == 'ubuntu-20.04' || matrix.os == 'macos-10.15'
