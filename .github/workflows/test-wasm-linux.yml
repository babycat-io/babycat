# This Action runs the unit tests for babycat's WebAssembly frontend on Linux.
name: test-wasm-linux

defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
  pull_request:
  push:
    tags-ignore:
      - 'v*' # Don't run these tests twice when cutting a new version.

env:
  CARGO_TERM_COLOR: always
  CARGO_HOME: /usr/share/rust/.cargo
  RUSTUP_HOME: /usr/share/rust/.rustup

jobs:
  test-wasm-linux:
    runs-on: ubuntu-20.04

    steps:

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: "1.53.0"
          override: true
          target: wasm32-unknown-unknown

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "14"

    - name: Cache the wasm-pack binary
      uses: actions/cache@v2
      with:
        path: /usr/share/rust/.cargo/bin/wasm-pack
        key: test-wasm-linux-cache-wasm-pack-0-10-1

    - name: Install wasm-pack (if it is not cached)
      run: wasm-pack --version || cargo install wasm-pack --version=^0.10.1

    - uses: actions/checkout@v2

    - name: Cache vendored Rust dependencies
      uses: actions/cache@v2
      with:
        path: ./vendor
        key: test-wasm-linux-${{ hashFiles('./Cargo.toml') }}

    - name: Vendor Rust code (if it is not cached)
      run: make vendor

    - name: Cache JavaScript test dependencies
      uses: actions/cache@v2
      with:
        path: ./tests-wasm-nodejs/node_modules
        key: test-wasm-linux-${{ hashFiles('./tests-wasm-nodejs/package.json') }}

    - name: Install JavaScript test requirements (if they are not cached)
      run: make init-javascript-tests

    - name: Build the WebAssembly frontend
      run: make build-wasm-nodejs

    - name: Run WebAssembly tests
      run: make test-wasm-nodejs
