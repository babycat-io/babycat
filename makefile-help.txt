Babycat Makefile commands:
-----------------------------------------------------------------------

Many commands operate on codebases of one language. If you want to
only affect one language, then use the `-lang` suffix.
-----------------------------------------------------------------------
help                            Print this help message.


-----------------------------------------------------------------------
clean                           Clean all of the below:
clean-caches                     - Local cache and checkpoint files.
clean-node-modules               - Installed node_modules directories.
clean-vendor                     - The vendor/ dir of Rust deps.
clean-target                     - The target/ dir of build arifacts.
clean-venv                       - The Python virtualenv.


-----------------------------------------------------------------------
vendor                          Vendor Rust dependencies into the
                                vendor/ subdirectory on the
                                filesystem.


-----------------------------------------------------------------------
fmt                             Automatically format code.
fmt-c
fmt-javascript
fmt-python
fmt-rust


-----------------------------------------------------------------------
fmt-check                       Check formatting, but do not fix
fmt-check-c                     anything. Useful for CI.
fmt-check-javascript
fmt-check-python
fmt-check-rust

-----------------------------------------------------------------------
lint                            Lint code for errors.
lint-python
lint-rust


-----------------------------------------------------------------------
docs                            Build the documentation website.


-----------------------------------------------------------------------
babycat.h                       Build a C header file that describe
                                Babycat's C API.


-----------------------------------------------------------------------
build                           Build the babycat libraries+bindings.

babycat.h                       Build the C header file that describes
                                babycat's C bindings.

build-python                    Build a Python abi3 wheel for the
                                current operating system.

build-python-and-install        Builds a Python abi3wheel for the
                                current operating system, and then
                                installs it in the virtualenv.

build-python-manylinux          Build a Python abi3 manylinux wheel
                                using a Docker container.

build-rust                      Build a Rust library.

build-wasm-bundler              Build the WebAssembly bindings in a
                                format suitable for
                                JavaScript/TypeScript projects
                                using a bundler like Webpack.

build-wasm-nodejs               Builds the WebAssembly bindings to
                                be used in the NodeJS runtime.

build-wasm-web                  Builds the WebAssembly bindings to
                                be used in a web browser. This does
                                not require a JavaScript bundler
                                like Webpack.

build-binary                    Builds the Babycat command line app.
                                This command is not invoked by the
                                above `make build` command because
                                the command line app has additional
                                dependencies on Linux.


-----------------------------------------------------------------------
test                            Run all unit and integration tests.
test-c
test-c-valgrind                 Runs C tests while checking for memory
                                leaks using Valgrind.
test-rust
test-wasm-nodejs


-----------------------------------------------------------------------
doctest                         Run *ONLY* tests that are written in
doctest-python                  documentation strings.
doctest-rust


-----------------------------------------------------------------------
bench                           Run benchmarks.
bench-rust


-----------------------------------------------------------------------
example-resampler-comparison    Run the sample rate conversion
                                example.

example-decode-rust             Run the Rust decoding example.

example-decode-python           Run the Python decoding example.

example-decode-c                Run the C decoding example.

example-decode-wasm             Build (but do NOT run) the
                                WebAssembly/JavaScript decoding
                                example. If you want to run it,
                                you need to view it in a web browser.


-----------------------------------------------------------------------
docker-build                    Manage Docker containers for this
                                project. We have four container
                                images. These commands build the
                                containers:

docker-build-cargo              - cargo: Rust and Cargo. The base
                                  for the below three images.

docker-build-ubuntu-minimal     - ubuntu-minimal: The minimal Ubuntu
                                  installation needed to compile
                                  Babycat.

docker-build-main               - main: Many versions of Python and
                                  developer tools.

docker-build-pip                - pip: A container for building
                                  manylinux images.


-----------------------------------------------------------------------
docker-run-docs-netlify         Runs our documentation build rule
                                inside of a copy of Netlify's
                                build image.

