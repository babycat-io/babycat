Babycat Makefile commands:
-----------------------------------------------------------------------

Many commands operate on codebases of one language. If you want to
only affect one language, then use the `-lang` suffix.
-----------------------------------------------------------------------
help                            Print this help message.


-----------------------------------------------------------------------
clean                           Clean all of the below:
clean-caches                     - Local cache and checkpoint files.
clean-node-modules               - Installed node_modules directories.
clean-vendor                     - The vendor/ dir of Rust deps.
clean-target                     - The target/ dir of build arifacts.
clean-venv                       - The Python virtualenv.



-----------------------------------------------------------------------
vendor                          Download and store source code
vendor-rust                     dependencies within this project
                                directory.


-----------------------------------------------------------------------
init                            Locally installs various developer
                                tools and vendors dependencies.


-----------------------------------------------------------------------
fmt                             Automatically format code.
fmt-c
fmt-javascript
fmt-python
fmt-rust



-----------------------------------------------------------------------
fmt-check                       Check formatting, but do not fix
fmt-check-c                     anything. Useful for CI.
fmt-check-javascript
fmt-check-python
fmt-check-rust



-----------------------------------------------------------------------
lint                            Lint code for errors.
lint-python
lint-rust



-----------------------------------------------------------------------
docs                            Build the documentation website.



-----------------------------------------------------------------------
build                           Build the babycat libraries+bindings.

build-python              Build a Python abi3 wheel for the
                                current operating system.

build-rust                      Build a Rust library.

build-wasm-bundler              Build the WebAssembly bindings in a
                                format suitable for
                                JavaScript/TypeScript projects
                                using a bundler like Webpack.

build-wasm-nodejs               Builds the WebAssembly bindings to
                                be used in the NodeJS runtime.

build-wasm-web                  Builds the WebAssembly bindings to
                                be used in a web browser. This does
                                not require a JavaScript bundler
                                like Webpack.



-----------------------------------------------------------------------
(These are additional build ccommands that are not covered in
 `make build`.)
babycat.h                       Build the C header file that describes
                                babycat's C bindings.

build-python-manylinux    Build a Python abi3 manylinux wheel
                                in a Docker container.

build-binary                    Builds the Babycat command line app.
                                This command is not invoked by the
                                above `make build` command because
                                the command line app has additional
                                dependencies on Linux.



-----------------------------------------------------------------------
build-ex                        Builds all of the "example"
                                programs.

build-ex-resampler-comparison   Builds the "resampler comparison"
                                example.

build-ex-decode-rust            Builds the Rust decoding example.

build-ex-decode-c               Builds the C decoding example.

build-ex-decode-wasm            Builds the WebAssembly/Webpack
                                decoding example.



-----------------------------------------------------------------------
run-ex-resampler-comparison     Runs the "resampler comparison"
                                example.

run-ex-decode-rust              Runs the Rust decoding example.

run-ex-decode-c                 Runs the C decoding example.

run-ex-decode-python            Runs the Python decoding example.



-----------------------------------------------------------------------
                                Installs compiled binarines in the
                                local environment.

install-python-wheel            Builds a Python abi3 wheel for the
                                current operating system, and then
                                installs it in the virtualenv.

install-python-wheel-manylinux  Builds a Python abi3 manylinux wheel
                                for and then installs it in the
                                virtualenv. This command only works
                                on Linux machines with Docker
                                installed.



-----------------------------------------------------------------------
test                            Run all unit and integration tests.
test-c
test-c-valgrind                 Runs C tests while checking for memory
                                leaks using Valgrind.
test-rust
test-wasm-nodejs



-----------------------------------------------------------------------
doctest                         Run *ONLY* tests that are written in
doctest-python                  documentation strings.
doctest-rust



-----------------------------------------------------------------------
bench                           Run benchmarks.
bench-rust



-----------------------------------------------------------------------
docker-build                    Manage Docker containers for this
                                project. We have four container
                                images. These commands build the
                                containers:

docker-build-cargo              - cargo: Rust and Cargo. The base
                                  for the below three images.

docker-build-ubuntu-minimal     - ubuntu-minimal: The minimal Ubuntu
                                  installation needed to compile
                                  Babycat.

docker-build-main               - main: Many versions of Python and
                                  developer tools.

docker-build-pip                - pip: A container for building
                                  manylinux images.



-----------------------------------------------------------------------
docker-run-docs-netlify         Runs our documentation build rule
                                inside of a copy of Netlify's
                                build image.

