MAKEFILE COMMANDS
--------------------------------------------------------------------------
--------------------------------------------------------------------------
help                    Print this help message.

build                   Build a Babycat frontend.
build-binary
build-c
build-python
build-python-manylinux
build-rust
build-wasm
build-wasm-bundler
build-wasm-nodejs
build-wasm-web

build-ffmpeg            Build a Babycat frontend with FFmpeg.
build-ffmpeg-binary
build-ffmpeg-c
build-ffmpeg-python
build-ffmpeg-rust

docs                    Build documentation.
docs-rustdoc            Build docs.rs/babycat documentation.
docs-sphinx             Build babycat.io documentation.

doctest                 Run documentation tests.
doctest-python
doctest-rust

init                    Initialize development dependencies.
init-cargo
init-npm
init-python

test                    Run unit tests for each frontend.
test-c
test-python
test-python-manylinux
test-rust
test-wasm-nodejs

test-ffmpeg             Run unit tests with FFmpeg.
test-ffmpeg-c
test-ffmpeg-python
test-ffmpeg-rust

build-ex                Builds one of the examples.
build-ex-c-decode
build-ex-rust-decode
build-ex-rust-resampler
build-ex-wasm-decode

run-ex                  Runs the examples.
run-ex-c-decode
run-ex-rust-decode
run-ex-rust-resampler
run-ex-wasm-decode

fmt                     Format source code.
fmt-c
fmt-javascript
fmt-python
fmt-rust

fmt-check               Check that source code is formatted.
fmt-check-c
fmt-check-javascript
fmt-check-python
fmt-check-rust

lint                    Lint source code.
lint-python
lint-rust

clean                   Clean build artifacts.
clean-caches
clean-docs
clean-node-modules
clean-target
clean-venv



MAKEFILE VARIABLES
--------------------------------------------------------------------------
--------------------------------------------------------------------------

PROFILE
    is the Cargo Profile (`debug`, `release`, or another profile defined in our Cargo.toml.)

FEATURES
    are the Cargo features that are not related to FFmpeg.

CARGO_TARGET_DIR
    is the root path for compiled artifacts.

Set ENABLE_VENV=0 to disable creating a Python virtualenv.
