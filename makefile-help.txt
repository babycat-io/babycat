Makefile commands:
-----------------------------------------------------------------------

Many commands operate on codebases of one language. If you want to
only affect one language, then use the `-lang` suffix.

--
clean                           Cleans the workspace of build and
                                temporary files.

---
init                            Initializes your working environment
init-nodejs                     by installing various build tools.
init-python
init-rust

--
vendor                          Vendor Rust dependencies into the
                                `vendor/` subdirectory on the
                                filesystem.

--
fmt                             Automatically format code.
fmt-c
fmt-javascript
fmt-python
fmt-rust

--
fmt-check                       Check formatting, but do not fix
fmt-check-c                     anything. Useful for CI.
fmt-check-javascript
fmt-check-python
fmt-check-rust

--
lint                            Lint code for errors.
lint-python
lint-rust

--
docs                            Generate documentation for the domains:
docs-root                        - babycat.io
docs-python                      - python.babycat.io
docs-rust                        - docs.rs (or rust.babycat.io)

--
babycat.h                       Build a C header file that describe
                                Babycat's C API.

--
build                           Build the babycat libraries+bindings.

build-python                    Build a Python abi3 wheel for the
                                current operating system.

build-python-manylinux          Build a Python manylinux wheel using
                                a Docker container.

build-rust                      Build a Rust library.

build-wasm-nodejs               Builds the WebAssembly bindings to
                                be used in the NodeJS runtime.

build-wasm-web                  Builds the WebAssembly bindings to
                                be used in a web browser. This does
                                not require a JavaScript bundler
                                like Webpack.

--
test                            Run all unit and integration tests.
test-c
test-c-valgrind                 Runs C tests while checking for memory
                                leaks using Valgrind.
test-rust
test-wasm-nodejs

--
doctest                         Run *ONLY* tests that are written in
doctest-python                  documentation strings.
doctest-rust

--
bench                           Run benchmarks.
bench-rust

--
example-resampler-comparison    Run the sample rate conversion
                                example.

--
docker-build                    Manage Docker containers for this
                                project. We have four container
                                images. These commands build the
                                containers:

docker-build-cargo              - cargo: Rust and Cargo. The base
                                  for the below three images.

docker-build-ubuntu-minimal     - ubuntu-minimal: The minimal Ubuntu
                                  installation needed to compile
                                  Babycat.

docker-build-main               - main: Many versions of Python and
                                  developer tools.

docker-build-pip                - pip: A container for building
                                  manylinux images.
